"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const dayjs_1 = __importDefault(require("dayjs"));
const head_1 = __importDefault(require("next/head"));
const link_1 = __importDefault(require("next/link"));
const Footer_1 = require("./Footer");
const OpenGraph_1 = require("./OpenGraph");
function Post(props) {
    if (!props.post) {
        return null;
    }
    return ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)(head_1.default, { children: [(0, jsx_runtime_1.jsxs)("title", { children: [props.post.title, " - ", props.themeConfig.title] }, void 0), (0, jsx_runtime_1.jsx)(OpenGraph_1.OpenGraph, { post: props.post }, void 0)] }, void 0), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "container mx-auto   sm:px-0 relative " }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'sticky top-0 py-3 flex items-center text-slate-900 dark:text-slate-200  backdrop-blur-sm' }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex  text-2xl  px-4 font-bold mb-4 justify-between w-full align-middle" }, { children: [(0, jsx_runtime_1.jsx)(link_1.default, Object.assign({ href: "/" }, { children: props.themeConfig.title }), void 0), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: 'text-white dark:text-gray-400 cursor-pointer hidden' }, { children: (0, jsx_runtime_1.jsx)(link_1.default, Object.assign({ href: "/" }, { children: (0, jsx_runtime_1.jsx)("svg", Object.assign({ t: "1646129169164", class: "icon", viewBox: "0 0 1045 1024", version: "1.1", xmlns: "http://www.w3.org/2000/svg", "p-id": "2202", width: "32", height: "32" }, { children: (0, jsx_runtime_1.jsx)("path", { d: "M282.517333 213.376l-45.354666 45.162667L489.472 512 237.162667 765.461333l45.354666 45.162667L534.613333 557.354667l252.096 253.269333 45.354667-45.162667-252.288-253.44 252.288-253.482666-45.354667-45.162667L534.613333 466.624l-252.096-253.226667z", "p-id": "2203" }, void 0) }), void 0) }), void 0) }), void 0)] }), void 0) }), void 0), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "mb-8  px-4" }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'text-3xl font-medium dark:text-gray-400' }, { children: props.post.title }), void 0), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: 'flex mt-4  items-center gap-2 dark:text-gray-400' }, { children: [(0, jsx_runtime_1.jsx)("img", { className: 'w-8 h-8 rounded-full', src: props.post.author.avatarUrl }, void 0), (0, jsx_runtime_1.jsx)("a", Object.assign({ target: '_blank', href: props.post.author.url }, { children: props.post.author.login }), void 0), (0, jsx_runtime_1.jsx)("a", Object.assign({ className: 'underline text-sm', target: '_blank', href: props.post.url }, { children: "View on GitHub" }), void 0)] }), void 0), props.post.reactionGroups.filter(group => group.reactors.totalCount !== 0).length ?
                                (0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'my-8 ' }, { children: (0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'flex gap-4 flex-wrap' }, { children: props.post.reactionGroups.filter(group => group.reactors.totalCount !== 0).map(reactionGroup => {
                                            var _a;
                                            return ((0, jsx_runtime_1.jsx)("a", Object.assign({ href: (_a = props.post) === null || _a === void 0 ? void 0 : _a.url, target: "_blank" }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: 'flex gap-2 bg-blue-50 border border-blue-100 px-4 py-1 rounded-full items-center' }, { children: [(0, jsx_runtime_1.jsx)("span", Object.assign({ className: 'text-md' }, { children: {
                                                                'THUMBS_UP': '👍',
                                                                'THUMBS_DOWN': '👎',
                                                                'LAUGH': '😄',
                                                                'HOORAY': '🎉',
                                                                'CONFUSED': '😕',
                                                                'HEART': '❤️',
                                                                'ROCKET': '🚀',
                                                                'EYES': '👀'
                                                            }[reactionGroup.content] }), void 0), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: 'text-sm font-sans' }, { children: reactionGroup.reactors.totalCount }), void 0)] }), void 0) }), void 0));
                                        }) }), void 0) }), void 0)
                                : null] }), void 0), (0, jsx_runtime_1.jsx)("div", { className: "post-body  px-4 dark:text-gray-400", dangerouslySetInnerHTML: { __html: props.post.html } }, void 0), (0, jsx_runtime_1.jsx)("hr", { className: 'my-12' }, void 0), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "font-sans px-4" }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: 'mb-12' }, { children: (0, jsx_runtime_1.jsx)("a", Object.assign({ target: '_blank', href: props.post.url, className: 'font-medium border border-gray-400 hover:bg-gray-400 hover:text-gray-100 transition-all dark:text-gray-400 text-sm rounded px-4 py-2' }, { children: "Add comment" }), void 0) }), void 0), props.post.comments.nodes.map(comment => {
                                return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: 'mb-8' }, { children: [(0, jsx_runtime_1.jsxs)("div", Object.assign({ className: 'flex items-center gap-2' }, { children: [(0, jsx_runtime_1.jsx)("img", { className: 'w-8 h-8 rounded-full', src: comment.author.avatarUrl, alt: "" }, void 0), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: 'font-medium' }, { children: comment.author.login }), void 0)] }), void 0), (0, jsx_runtime_1.jsx)("div", { dangerouslySetInnerHTML: { __html: comment.html }, className: 'mt-2 mb-2 text-gray-800 post-body font-sans' }, void 0), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: 'mt-1 flex text-sm text-gray-500 items-center gap-2' }, { children: [(0, jsx_runtime_1.jsx)("a", Object.assign({ target: '_blank', href: comment.url, className: 'hover:underline' }, { children: "Reply" }), void 0), (0, jsx_runtime_1.jsx)("span", { children: "\u2022" }, void 0), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: '' }, { children: (0, dayjs_1.default)(comment.createdAt).format('YYYY-MM-DD') }), void 0)] }), void 0)] }), void 0));
                            })] }), void 0), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: "my-12" }, { children: (0, jsx_runtime_1.jsx)(Footer_1.Footer, {}, void 0) }), void 0)] }), void 0)] }, void 0));
}
exports.default = Post;
